#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ RAG —Å–∏—Å—Ç–µ–º—ã
"""

import sys
import os
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –≤ PYTHONPATH
project_root = Path(__file__).parent
sys.path.insert(0, str(project_root))


def check_environment():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—å –æ–∫—Ä—É–∂–µ–Ω–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è...")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–∞
    env_file = project_root / ".env"
    if not env_file.exists():
        print("‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("üìù –°–∫–æ–ø–∏—Ä—É–π—Ç–µ .env.example –≤ .env –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à OpenAI API –∫–ª—é—á")
        return False

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ data
    data_dir = project_root / "data"
    if not data_dir.exists():
        print("üìÅ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É data/...")
        data_dir.mkdir(exist_ok=True)

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞–ø–∫–∏ chroma_db
    chroma_dir = project_root / "chroma_db"
    if not chroma_dir.exists():
        print("üìÅ –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É chroma_db/...")
        chroma_dir.mkdir(exist_ok=True)

    print("‚úÖ –û–∫—Ä—É–∂–µ–Ω–∏–µ –≥–æ—Ç–æ–≤–æ!")
    return True


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞"""
    print("""
    ü§ñ RAG –°–∏—Å—Ç–µ–º–∞ —Å ChromaDB
    ========================
    """)

    if not check_environment():
        sys.exit(1)

    try:
        print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã...")
        from main import main as run_main
        run_main()
    except KeyboardInterrupt:
        print("\nüëã –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except ImportError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
        print("üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã:")
        print("   conda activate rag_project")
        print("   pip install -r requirements.txt")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        sys.exit(1)


if __name__ == "__main__":
    main()